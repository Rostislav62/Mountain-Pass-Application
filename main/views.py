#  /Mountain Pass Application/main/views.py

# from main.models import PerevalGpsTracks, PerevalAdded
# from main.services.google_maps import get_google_map_link
import traceback
import os
from main.db_service import DatabaseService
from main.models import PerevalImages, PerevalAdded
from django.conf import settings
from rest_framework.views import APIView
from django.core.files.storage import default_storage
from django.core.files.base import ContentFile
from rest_framework.generics import ListAPIView  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
from rest_framework.response import Response  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç Response
from rest_framework import status  # –î–ª—è —É–∫–∞–∑–∞–Ω–∏—è HTTP-—Å—Ç–∞—Ç—É—Å–æ–≤
# from django.shortcuts import get_object_or_404  # –£–¥–æ–±–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ 404
from main.models import PerevalAdded  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ü–µ—Ä–µ–≤–∞–ª–∞
from main.serializers import SubmitDataSerializer  # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä


#  /Mountain Pass Application/main/views.py
class SubmitDataView(APIView):
    """API –¥–ª—è –ø—Ä–∏—ë–º–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ–≤–∞–ª–µ"""

    def post(self, request):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç POST-–∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–≤–∞–ª–∞"""
        print("üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", request.data)

        try:
            print("üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", request.data)

            serializer = SubmitDataSerializer(data=request.data)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã
            if serializer.is_valid():
                data = serializer.validated_data

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
                pereval = DatabaseService.add_pereval(
                    user_email=data['user']['email'],
                    data=data
                )

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
                return Response({"status": 200, "message": None, "id": pereval.id}, status=status.HTTP_201_CREATED)

            # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
            return Response({"status": 400, "message": serializer.errors}, status=status.HTTP_400_BAD_REQUEST)

        except Exception as e:
            # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
            traceback.print_exc()
            return Response({"status": 500, "message": str(e)}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)

    def get(self, request):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email"""
        email = request.query_params.get("user__email")

        if not email:
            return Response({"message": "–¢—Ä–µ–±—É–µ—Ç—Å—è email"}, status=status.HTTP_400_BAD_REQUEST)

        perevals = PerevalAdded.objects.filter(user__email=email)
        serializer = SubmitDataSerializer(perevals, many=True)

        return Response(serializer.data, status=status.HTTP_200_OK)

class UploadImageView(APIView):
    """API –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–µ—Ä–µ–≤–∞–ª–æ–≤"""

    def post(self, request):
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ë–î"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª –≤ –∑–∞–ø—Ä–æ—Å–µ
        if 'image' not in request.FILES:
            return Response({"status": 400, "message": "–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"}, status=status.HTTP_400_BAD_REQUEST)

        image = request.FILES['image']
        pereval_id = request.data.get('pereval_id')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–µ—Ä–µ–≤–∞–ª
        try:
            pereval = PerevalAdded.objects.get(id=pereval_id)
        except PerevalAdded.DoesNotExist:
            return Response({"status": 400, "message": "–ü–µ—Ä–µ–≤–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"}, status=status.HTTP_400_BAD_REQUEST)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        upload_dir = os.path.join(settings.MEDIA_ROOT, "pereval_images")
        if not os.path.exists(upload_dir):
            os.makedirs(upload_dir)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ `MEDIA_ROOT/pereval_images/`
        file_path = os.path.join("pereval_images", image.name)
        full_path = os.path.join(settings.MEDIA_ROOT, file_path)
        default_storage.save(full_path, ContentFile(image.read()))

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –≤ –ë–î
        image_record = PerevalImages.objects.create(pereval=pereval, data=file_path)


        return Response({"status": 200, "message": "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω", "image_id": image_record.id}, status=status.HTTP_201_CREATED)


class UploadTrackView(APIView):
    """API –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ GPS-—Ç—Ä–µ–∫–æ–≤"""

    def post(self, request):
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç GPS-—Ç—Ä–µ–∫ (GPX/KML), —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ë–î"""

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª –≤ –∑–∞–ø—Ä–æ—Å–µ
        if 'track' not in request.FILES:
            return Response({"status": 400, "message": "–§–∞–π–ª —Ç—Ä–µ–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"}, status=status.HTTP_400_BAD_REQUEST)

        track = request.FILES['track']
        pereval_id = request.data.get('pereval_id')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–µ—Ä–µ–≤–∞–ª
        try:
            pereval = PerevalAdded.objects.get(id=pereval_id)
        except PerevalAdded.DoesNotExist:
            return Response({"status": 400, "message": "–ü–µ—Ä–µ–≤–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"}, status=status.HTTP_400_BAD_REQUEST)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        upload_dir = os.path.join(settings.MEDIA_ROOT, "pereval_tracks")
        if not os.path.exists(upload_dir):
            os.makedirs(upload_dir)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ `MEDIA_ROOT/pereval_tracks/`
        file_path = os.path.join("pereval_tracks", track.name)
        full_path = os.path.join(settings.MEDIA_ROOT, file_path)
        default_storage.save(full_path, ContentFile(track.read()))

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –≤ –ë–î
        # track_record = PerevalGpsTracks.objects.create(pereval=pereval, track_path=file_path)
        # return Response({"status": 200, "message": "–§–∞–π–ª —Ç—Ä–µ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω", "track_id": track_record.id}, status=status.HTTP_201_CREATED)

        return Response({"status": 200, "message": "–§–∞–π–ª —Ç—Ä–µ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω"}, status=status.HTTP_201_CREATED)


class SubmitDataUpdateView(APIView):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ–≤–∞–ª–µ, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å `new`"""

    def patch(self, request, pk, *args, **kwargs):
        print("PATCH-–∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω")  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ –º–µ—Ç–æ–¥

        try:
            pereval = PerevalAdded.objects.get(pk=pk)
        except PerevalAdded.DoesNotExist:
            return Response({"state": 0, "message": "–ü–µ—Ä–µ–≤–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"}, status=status.HTTP_404_NOT_FOUND)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤–∞–ª–∞
        if pereval.status != "new":
            return Response(
                {"state": 0, "message": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ: —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤–∞–ª–∞ –Ω–µ `new`"},
                status=status.HTTP_400_BAD_REQUEST
            )

        # –ó–∞–ø—Ä–µ—â–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –§–ò–û, email –∏ —Ç–µ–ª–µ—Ñ–æ–Ω
        data = request.data.copy()
        if "user" in data:
            for field in ["fam", "name", "otc", "email", "phone"]:
                if field in data["user"]:
                    del data["user"][field]  # –£–¥–∞–ª—è–µ–º –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –ø–æ–ª—è

        serializer = SubmitDataSerializer(pereval, data=data, partial=True)  # –í–ê–ñ–ù–û: `partial=True`

        if serializer.is_valid():
            print("üîç –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º:", serializer.validated_data)  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            serializer.save()
            return Response({"state": 1, "message": "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"}, status=status.HTTP_200_OK)
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:", serializer.errors)  # –í—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª—å
            return Response({"state": 0, "message": serializer.errors}, status=status.HTTP_400_BAD_REQUEST)


class SubmitDataListView(ListAPIView):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–µ—Ä–µ–≤–∞–ª–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ email."""

    serializer_class = SubmitDataSerializer  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
    queryset = PerevalAdded.objects.all()  # –ë–∞–∑–æ–≤—ã–π QuerySet (–æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–∑–∂–µ)

    def get_queryset(self):
        """
        –ü–æ–ª—É—á–∞–µ–º `email` –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–µ—Ä–µ–≤–∞–ª—ã.
        –ï—Å–ª–∏ email –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.
        """
        email = self.request.query_params.get('user__email')  # –ü–æ–ª—É—á–∞–µ–º email –∏–∑ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

        if not email:  # –ï—Å–ª–∏ email –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
            return PerevalAdded.objects.none()

        return PerevalAdded.objects.filter(user__email=email)  # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ email
