#  /Mountain Pass Application/main/tests/test_api.py
# from main.models import PerevalGpsTracks  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
import pytest
from rest_framework.test import APIClient  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
from django.urls import reverse  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º reverse –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –º–∞—Ä—à—Ä—É—Ç–æ–≤
from main.models import PerevalAdded, PerevalImages, Coords, User  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
from rest_framework import status


@pytest.mark.django_db  # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Ç–µ—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
class TestAPI:
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API"""

    def setup_method(self):
        """–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º"""

        self.client = APIClient()  # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è API
        self.submit_url = reverse("submit-data")

        # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–∞
        self.upload_image_url = reverse("upload-image")  # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        # self.upload_track_url = reverse("upload-track")  # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ GPS-—Ç—Ä–µ–∫–∞

        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ç–µ—Å—Ç–∞—Ö
        self.user = User.objects.create(
            email="testuser@example.com",
            fam="–¢–µ—Å—Ç–æ–≤",
            name="–¢–µ—Å—Ç",
            otc="–¢–µ—Å—Ç–æ–≤–∏—á",
            phone="+79998887766"
        )

    def test_submit_valid_data(self):
        """–¢–µ—Å—Ç: –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞—é—Ç –∑–∞–ø–∏—Å—å –≤ –ë–î"""

        payload = {
            "beautyTitle": "–ø–µ—Ä. ",
            "title": "–ü—Ö–∏—è",
            "other_titles": "–¢—Ä–∏–µ–≤",
            "connect": "",
            "add_time": "2024-06-15T12:00:00Z",
            "user": {
                "email": self.user.email,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                "fam": self.user.fam,
                "name": self.user.name,
                "otc": self.user.otc,
                "phone": self.user.phone
            },
            "coord": {
                "latitude": "45.3842",
                "longitude": "7.1525",
                "height": "1200"
            },
            "level_winter": "",
            "level_summer": "1–ê",
            "level_autumn": "1–ê",
            "level_spring": "",
            "images": [],
            "difficulties": []
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞
        response = self.client.post(self.submit_url, data=payload, format="json")
        print("üîç –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status_code, response.json())

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ 201 (Created)
        assert response.status_code == 201
        assert response.json()["status"] == 200  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ API –≤–µ—Ä–Ω—É–ª —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        assert PerevalAdded.objects.count() == 1  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –ë–î —Å–æ–∑–¥–∞–Ω–∞ –æ–¥–Ω–∞ –∑–∞–ø–∏—Å—å

    def test_upload_image(self, tmp_path):
        """–¢–µ—Å—Ç: –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""

        # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
        coords = Coords.objects.create(latitude=45.0, longitude=7.0, height=1000)

        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        pereval = PerevalAdded.objects.create(
            user=self.user,  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            coord=coords,
            beautyTitle="–ø–µ—Ä. ",
            title="–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª"
        )

        # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        image_path = tmp_path / "test.jpg"
        image_path.write_bytes(b"testimagecontent")  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤ API
        with open(image_path, "rb") as image_file:
            response = self.client.post(self.upload_image_url, {"image": image_file, "pereval_id": pereval.id})

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ 201 (Created), –∞ –Ω–µ 200
        assert response.status_code == 201
        assert response.json()["status"] == 200  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å API
        assert PerevalImages.objects.count() == 1  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ë–î

    # def test_upload_track(self, tmp_path):
    #     """–¢–µ—Å—Ç: –∑–∞–≥—Ä—É–∑–∫–∞ GPS-—Ç—Ä–µ–∫–∞"""
    #
    #     # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    #     coords = Coords.objects.create(latitude=45.0, longitude=7.0, height=1000)
    #
    #     # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    #     pereval = PerevalAdded.objects.create(
    #         user=self.user,  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    #         coord=coords,
    #         beautyTitle="–ø–µ—Ä. ",
    #         title="–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª"
    #     )
    #
    #     # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π GPX-—Ñ–∞–π–ª –≤ —Ç–µ—Å—Ç–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    #     track_path = tmp_path / "test.gpx"
    #     track_path.write_bytes(b"<gpx></gpx>")  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    #
    #     # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –≤ API
    #     with open(track_path, "rb") as track_file:
    #         response = self.client.post(self.upload_track_url, {"track": track_file, "pereval_id": pereval.id})
    #
    #     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ 201 (Created), –∞ –Ω–µ 200
    #     assert response.status_code == 201
    #     assert response.json()["status"] == 200  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ç—É—Å API
    #     assert PerevalGpsTracks.objects.count() == 1  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ GPS-—Ç—Ä–µ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î

@pytest.mark.django_db
class TestSubmitDataAPI:
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    def setup_method(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º"""
        self.client = APIClient()

        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user = User.objects.create(
            email="test@example.com",
            fam="–ò–≤–∞–Ω–æ–≤",
            name="–ü—ë—Ç—Ä",
            otc="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
            phone="+79999999999"
        )

        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        self.coords = Coords.objects.create(latitude=45.0, longitude=7.0, height=1200)

        # –°–æ–∑–¥–∞—ë–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–æ–≤
        self.pereval1 = PerevalAdded.objects.create(user=self.user, coord=self.coords, title="–ü–µ—Ä–µ–≤–∞–ª 1", connect="–î–æ–ª–∏–Ω–∞ 1")
        self.pereval2 = PerevalAdded.objects.create(user=self.user, coord=self.coords, title="–ü–µ—Ä–µ–≤–∞–ª 2", connect="–î–æ–ª–∏–Ω–∞ 2")

    def test_get_perevals_by_user(self):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ–≤–∞–ª–æ–≤ –ø–æ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        url = reverse('submit-data-list') + f"?user__email={self.user.email}"
        response = self.client.get(url)

        assert response.status_code == status.HTTP_200_OK
        assert isinstance(response.json(), list)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏—à—ë–ª —Å–ø–∏—Å–æ–∫
        assert len(response.json()) > 0  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π

