#  /Mountain Pass Application/main/serializers.py


import logging
from rest_framework import serializers
from main.models import PerevalAdded, Coords, User, PerevalImages, PerevalDifficulty

logger = logging.getLogger(__name__)  # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏


class CoordsSerializer(serializers.ModelSerializer):
    """–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä–µ–≤–∞–ª–∞"""
    class Meta:
        model = Coords
        fields = '__all__'


class UserSerializer(serializers.ModelSerializer):
    """–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    email = serializers.EmailField(write_only=True, required=True)
    fam = serializers.CharField(required=True)  # –§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
    name = serializers.CharField(required=True)  # –ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
    phone = serializers.CharField(required=True)  # –¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω

    class Meta:
        model = User
        fields = '__all__'

    def validate(self, data):
        print("üì§ –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –≤ UserSerializer:", data)  # ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        return data

    def create(self, validated_data):
        """–ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ"""
        user, created = User.objects.get_or_create(email=validated_data['email'], defaults=validated_data)
        return user


class PerevalImagesSerializer(serializers.ModelSerializer):
    """–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–µ—Ä–µ–≤–∞–ª–∞"""

    class Meta:
        model = PerevalImages
        fields = ['data', 'title']



class PerevalDifficultySerializer(serializers.ModelSerializer):
    """–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    class Meta:
        model = PerevalDifficulty
        fields = ['season', 'level']


class SubmitDataSerializer(serializers.ModelSerializer):
    """–°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö API"""

    user = UserSerializer()  # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    coord = CoordsSerializer()  # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    difficulties = PerevalDifficultySerializer(many=True)  # –¢–µ–ø–µ—Ä—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π

    images = PerevalImagesSerializer(many=True, required=True)
    class Meta:
        model = PerevalAdded
        fields = ['beautyTitle', 'title', 'other_titles', 'connect', 'add_time', 'user', 'coord', 'status',
                  'difficulties', 'images']

    def create(self, validated_data):
        difficulties_data = validated_data.pop('difficulties', [])
        images_data = validated_data.get('images', [])

        print("üîç –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ `create()`: ", images_data)  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        print("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", images_data)  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        pereval = PerevalAdded.objects.create(**validated_data)

        # –°–æ–∑–¥–∞—ë–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–î–û–õ–ñ–ù–û –ë–´–¢–¨ –ò–ú–ï–ù–ù–û –¢–ê–ö!)
        for image_data in images_data:
            PerevalImages.objects.create(
                pereval=pereval,
                data=image_data.get("data", ""),  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ª–∏ data
                title=image_data.get("title", "")  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ª–∏ title
            )

        return pereval

    def update(self, instance, validated_data):
        """–û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–∞–ª"""
        user_data = validated_data.pop("user", None)  # –î–æ—Å—Ç–∞—ë–º `user`
        if user_data:
            user = instance.user
            for attr, value in user_data.items():
                setattr(user, attr, value)  # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.save()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

        return super().update(instance, validated_data)





