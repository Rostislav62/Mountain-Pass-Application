#  /Mountain Pass Application/main/models.py

from django.db import models
from django.contrib.auth.models import User


class ModeratorGroup(models.Model):
    """–ì—Ä—É–ø–ø–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤"""

    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name="moderator_group")
    added_by = models.ForeignKey(User, on_delete=models.CASCADE, related_name="added_moderators")

    def __str__(self):
        return f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {self.user.email} (–î–æ–±–∞–≤–ª–µ–Ω {self.added_by.email})"


class DifficultyLevel(models.Model):
    """–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤–∞–ª–∞"""
    code = models.CharField(max_length=2, unique=True)  # –ù–∞–ø—Ä–∏–º–µ—Ä, '1A', '3B'
    description = models.CharField(max_length=255)  # –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    characteristics = models.TextField(blank=True, null=True)  # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–æ–ª–æ–≥–∏–µ —Å–∫–ª–æ–Ω—ã, –≤—ã—Å–æ—Ç–∞ –¥–æ 3000 –º")
    requirements = models.TextField(blank=True, null=True)  # –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—é –∏ –Ω–∞–≤—ã–∫–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ë–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏, —Ç—Ä–µ–∫–∫–∏–Ω–≥–æ–≤—ã–µ –ø–∞–ª–∫–∏")

    def __str__(self):
        return self.description


class Season(models.Model):
    """–°–µ–∑–æ–Ω—ã –¥–ª—è –ø–µ—Ä–µ–≤–∞–ª–æ–≤"""
    code = models.CharField(max_length=10, unique=True)  # –ù–∞–ø—Ä–∏–º–µ—Ä, 'winter'
    name = models.CharField(max_length=20, unique=True)  # –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–ó–∏–º–∞, –õ–µ—Ç–æ)

    def __str__(self):
        return self.name


class Coords(models.Model):
    latitude = models.DecimalField(max_digits=9, decimal_places=6)
    longitude = models.DecimalField(max_digits=9, decimal_places=6)
    height = models.IntegerField()

    def __str__(self):
        return f"({self.latitude}, {self.longitude}, {self.height})"


class PerevalStatus(models.Model):
    """–¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–µ—Ä–µ–≤–∞–ª–æ–≤"""

    name = models.CharField(max_length=20, unique=True)

    def __str__(self):
        return self.name


class PerevalUser(models.Model):
    """–ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –≤–Ω–æ—Å—è—â–∏—Ö –¥–∞–Ω–Ω—ã–µ –æ –ø–µ—Ä–µ–≤–∞–ª–∞—Ö"""

    family_name = models.CharField(max_length=255)  # –§–∞–º–∏–ª–∏—è
    first_name = models.CharField(max_length=255)  # –ò–º—è
    father_name = models.CharField(max_length=255, blank=True, null=True, default="")  # –û—Ç—á–µ—Å—Ç–≤–æ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
    phone = models.CharField(max_length=20, unique=False, blank=False, null=False)  # –¢–µ–ª–µ—Ñ–æ–Ω (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π)
    email = models.EmailField(unique=False, blank=False, null=False)  # Email (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π)
    created_at = models.DateTimeField(auto_now_add=True)  # –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è)

    def __str__(self):
        return f"{self.family_name} {self.first_name} ({self.email})"


    class Meta:
        verbose_name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–≤–∞–ª–æ–≤"
        verbose_name_plural = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–µ—Ä–µ–≤–∞–ª–æ–≤"


class PerevalAdded(models.Model):
    """–ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–æ–≤"""

    user = models.ForeignKey(
        PerevalUser,
        on_delete=models.SET_DEFAULT,
        default=1  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π admin_user (ID=1)
    )
    coord = models.ForeignKey(Coords, on_delete=models.CASCADE)
    beautyTitle = models.CharField(max_length=255)
    title = models.CharField(max_length=255)
    other_titles = models.CharField(max_length=255, blank=True, null=True)
    connect = models.BooleanField(default=False)  # –ü–µ—Ä–µ–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä (True) –∏–ª–∏ –Ω–µ—Ç (False)
    add_time = models.DateTimeField(auto_now_add=True)
    status = models.ForeignKey(PerevalStatus, on_delete=models.CASCADE, default=1)  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ PerevalStatus
    route_description = models.TextField(blank=True, null=True)

    def __str__(self):
        return self.title


class PerevalImages(models.Model):
    pereval = models.ForeignKey(PerevalAdded, on_delete=models.CASCADE, related_name="images")
    data = models.CharField(max_length=255, default="")  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    title = models.CharField(max_length=255, default="")  # –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

    def __str__(self):
        return f"{self.title} ({self.data})"


class PerevalDifficulty(models.Model):
    pereval = models.ForeignKey(PerevalAdded, on_delete=models.CASCADE, related_name="difficulties")
    season = models.ForeignKey(Season, on_delete=models.CASCADE)  # üî• –¢–µ–ø–µ—Ä—å —Å–µ–∑–æ–Ω ‚Äî –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á
    difficulty = models.ForeignKey(DifficultyLevel, on_delete=models.CASCADE, null=True,
                                   default=None)  # üî• –¢–µ–ø–µ—Ä—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å ‚Äî –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á

    class Meta:
        unique_together = ('pereval', 'season') # –ó–∞–ø—Ä–µ—â–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–µ–∑–æ–Ω–∞

    def __str__(self):
        return f"{self.pereval.title} - {self.season.name}: {self.difficulty or 'No difficulty'}"


class ApiSettings(models.Model):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ API: —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""

    require_authentication = models.BooleanField(default=False)  # üî• –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é API –æ—Ç–∫—Ä—ã—Ç
    updated_at = models.DateTimeField(auto_now=True)  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    updated_by = models.ForeignKey(
        User, on_delete=models.SET_NULL, null=True, blank=True, verbose_name="–ö—Ç–æ –∏–∑–º–µ–Ω–∏–ª"
    )  # –ê–¥–º–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫—É

    def __str__(self):
        return f"API Auth Required: {self.require_authentication}"


class EmailConfirmationToken(models.Model):
    """–ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email"""
    user = models.OneToOneField(PerevalUser, on_delete=models.CASCADE)
    code = models.CharField(max_length=6)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"–ö–æ–¥ –¥–ª—è {self.user.email}: {self.code}"